{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elvis\\\\Desktop\\\\Proyectos React\\\\portafolio\\\\src\\\\components\\\\Project\\\\ProjectsContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport VideoModal from \"./VideoModal\"; // Ajusta la ruta según tu estructura de archivos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProjectsContent = () => {\n  _s();\n  const [modalShow, setModalShow] = useState(false);\n  const [selectedVideoId, setSelectedVideoId] = useState(\"\");\n  const openModal = videoId => {\n    setSelectedVideoId(videoId);\n    setModalShow(true);\n  };\n  const closeModal = () => {\n    setModalShow(false);\n    setSelectedVideoId(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-thumbnail\",\n          onClick: () => openModal(\"tuIDDeVideoDeYouTube\"),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://img.youtube.com/vi/tuIDDeVideoDeYouTube/mqdefault.jpg`,\n            alt: \"Video Thumbnail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoModal, {\n      show: modalShow,\n      onHide: closeModal,\n      videoId: selectedVideoId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ProjectsContent, \"jv5K1O3aQ5ox/T7ijhDa856XPlA=\");\n_c = ProjectsContent;\nexport default ProjectsContent;\nvar _c;\n$RefreshReg$(_c, \"ProjectsContent\");","map":{"version":3,"names":["React","useState","Container","Row","Col","VideoModal","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectsContent","_s","modalShow","setModalShow","selectedVideoId","setSelectedVideoId","openModal","videoId","closeModal","children","className","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","show","onHide","_c","$RefreshReg$"],"sources":["C:/Users/Elvis/Desktop/Proyectos React/portafolio/src/components/Project/ProjectsContent.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport VideoModal from \"./VideoModal\"; // Ajusta la ruta según tu estructura de archivos\r\n\r\nconst ProjectsContent = () => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [selectedVideoId, setSelectedVideoId] = useState(\"\");\r\n\r\n  const openModal = (videoId) => {\r\n    setSelectedVideoId(videoId);\r\n    setModalShow(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalShow(false);\r\n    setSelectedVideoId(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Resto de tu contenido */}\r\n      <Row>\r\n        <Col>\r\n          <div className=\"video-thumbnail\" onClick={() => openModal(\"tuIDDeVideoDeYouTube\")}>\r\n            {/* Aquí podrías usar una imagen en miniatura del video */}\r\n            <img\r\n              src={`https://img.youtube.com/vi/tuIDDeVideoDeYouTube/mqdefault.jpg`}\r\n              alt=\"Video Thumbnail\"\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <VideoModal show={modalShow} onHide={closeModal} videoId={selectedVideoId} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectsContent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAOC,UAAU,MAAM,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMe,SAAS,GAAIC,OAAO,IAAK;IAC7BF,kBAAkB,CAACE,OAAO,CAAC;IAC3BJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvBL,YAAY,CAAC,KAAK,CAAC;IACnBE,kBAAkB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBAEEZ,OAAA,CAACJ,GAAG;MAAAgB,QAAA,eACFZ,OAAA,CAACH,GAAG;QAAAe,QAAA,eACFZ,OAAA;UAAKa,SAAS,EAAC,iBAAiB;UAACC,OAAO,EAAEA,CAAA,KAAML,SAAS,CAAC,sBAAsB,CAAE;UAAAG,QAAA,eAEhFZ,OAAA;YACEe,GAAG,EAAG,+DAA+D;YACrEC,GAAG,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNpB,OAAA,CAACF,UAAU;MAACuB,IAAI,EAAEhB,SAAU;MAACiB,MAAM,EAAEX,UAAW;MAACD,OAAO,EAAEH;IAAgB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC7E,CAAC;AAEP,CAAC;AAAChB,EAAA,CA/BID,eAAe;AAAAoB,EAAA,GAAfpB,eAAe;AAiCrB,eAAeA,eAAe;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}